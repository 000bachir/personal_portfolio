---
    import { Button } from "@/components/ui/button.tsx"
    import SocialLink from "@/components/widgets/SocialLink.astro"
---

<script>
    const wrapper = document.querySelector("#tiles") as HTMLElement;
    let columns = 0;
    let rows = 0;

    const createTile = () => {
        const tile = document.createElement("div");
        tile.classList.add("tile");
        return tile;
    };

    const createTiles = (quantity: number) => {
        const fragment = document.createDocumentFragment(); // Use a fragment for better performance.
        for (let i = 0; i < quantity; i++) {
            fragment.appendChild(createTile());
        }
        wrapper.appendChild(fragment);
    };

    const createGrid = () => {
        wrapper.innerHTML = ""; // Clear existing tiles.
        let size = 40;

        // Get the wrapper's dimensions.
        const wrapperWidth = wrapper.clientWidth;
        const wrapperHeight = wrapper.clientHeight;

        columns = Math.floor(wrapperWidth / size);
        rows = Math.floor(wrapperHeight / size);

        wrapper.style.setProperty("--columns", String(columns));
        wrapper.style.setProperty("--rows", String(rows));

        createTiles(columns * rows);
    };

    // Initial grid creation
    createGrid();

    // Throttle the resize event to improve performance.
    let resizeTimeout: number | null = null;
    window.onresize = () => {
        if (resizeTimeout) clearTimeout(resizeTimeout);
        resizeTimeout = window.setTimeout(() => {
            createGrid();
        }, 150); // Adjust delay as needed.
    };
</script>

<section
    id="grid-container"
    class="h-72 w-full relative overflow-hidden flex items-center flex-col justify-center"
>
    <div
        id="footer_contact_wrapper"
        class="h-full w-full mx-auto relative overflow-hidden border-t-gray-600"
    >
        <div id="tiles" class=""></div>
    </div>

    <div id="content-footer" class="absolute left-0 top-0 h-full w-full z-20 grid grid-cols-3">

        <div id="footer-text" class="h-full w-full relative overflow-hidden flex items-center justify-center">
            <h1 class="text-3xl font-semibold text-white text-balance">
                Where innovation & <br> <span class="text-orange-500">creativity</span> thrive
            </h1>
        </div>
        <div class="h-full w-full relative overflow-hidden flex justify-center ">
            <ul class="flex items-center flex-col justify-center gap-4">
                <li><h3 class="text-indigo-700 text-2xl">Explore</h3></li>
                <li class="text-white font-semibold text-xl"><a href="/">Home</a></li>
                <li class="text-white font-semibold text-xl"><a href="/about">About</a></li>
                <li class="text-white font-semibold text-xl"><a href="/project">Project</a></li>
            </ul>
        </div>
        <div class="h-full w-full relative overflow-hidden flex items-center justify-center flex-col gap-4">
            <SocialLink />
            <Button size={"lg"}>
                <a href="/contact" class="text-2xl text-white font-semibold">Contact</a>
            </Button>
        </div>

    </div>

</section>

<style is:global>
    :root {
        --g1: rgb(98, 0, 234);
        --g2: rgb(236, 64, 122);
    }
    #grid-container {
        animation: background-pan 10s linear infinite;
        background: linear-gradient(to right, var(--g1), var(--g2), var(--g1));
        background-size: 200%;
    }

    @keyframes background-pan {
        from {
            background-position: 0% center;
        }

        to {
            background-position: -200% center;
        }
    }

    #tiles {
        height: calc(100% - 1px);
        width: calc(100% - 1px);
        position: relative;
        z-index: 2;
        display: grid;
        grid-template-columns: repeat(var(--columns), 1fr);
        grid-template-rows: repeat(var(--rows), 1fr);
        gap: 1px;
    }

    .tile {
        cursor: pointer;
        position: relative;
    }

   

    .tile:before {
        background-color: rgb(15, 15, 15);
        content: "";
        inset: 0.5px;
        position: absolute;
    }

    @media screen and (max-width:425px){
        #grid-container{
            height:100dvh;
            display:flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        #content-footer{
            display:flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        #content-footer > #footer-text > h1{
            text-align:center;
        }
    }


</style>
